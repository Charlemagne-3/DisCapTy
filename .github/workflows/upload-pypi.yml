name: Publish to PyPI
on:
  release:
    types: [published]

jobs:
  pre-release:
    name: Prepare release
    uses: ./.github/workflows/prepare-release.yml

  deploy:
    if: github.repository == 'Predeactor/DisCapTy'
    runs-on: ubuntu-latest
    environment: release
    name: Deploy DisCapTy to PyPi.
    needs: pre-release

    steps:
    - uses: actions/checkout@v2

    # Load the cached installation of Poetry
    - name: Load cached Poetry installation
      id: cached-poetry
      uses: actions/cache@v2
      with:
        path: ~/.local
        key: poetry-${{ runner.os }}

    # Install & configure Poetry
    - name: Install Poetry
      if: steps.cached-poetry.outputs.cache-hit != 'true'
      uses: snok/install-poetry@v1

    # Install Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'poetry'

    # Install external dependencies & DisCapTy
    - name: Install dependencies and DisCapTy
      run: poetry install -n

    - name: Build package
      run: poetry build -n

    - name: Publish to PyPi
      run: |
        poetry config pypi-token.pypi "${{ secrets.PYPI_API_TOKEN }}"
        poetry publish -n
